{"version":3,"file":"view.js","mappings":"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","sources":["webpack://audio-player-block/./src/Components/Common/MP3Player.js","webpack://audio-player-block/./src/style.scss?75bd","webpack://audio-player-block/webpack/bootstrap","webpack://audio-player-block/webpack/runtime/define property getters","webpack://audio-player-block/webpack/runtime/hasOwnProperty shorthand","webpack://audio-player-block/webpack/runtime/make namespace object","webpack://audio-player-block/./src/view.js"],"sourcesContent":["const defaultCoverImg = 'https://i.ibb.co/1qDChXj/cassette-tape-square.jpg';\r\n\r\nconst MP3Player = (selector, songs = []) => {\r\n\tconst element = typeof selector == 'string' ? document.querySelector(selector) : selector;\r\n\r\n\tconst cover = element.querySelector('#cover');\r\n\tconst disc = element.querySelector('#disc');\r\n\tconst title = element.querySelector('#title');\r\n\tconst artist = element.querySelector('#artist');\r\n\tconst progressContainer = element.querySelector('#progressContainer');\r\n\tconst progress = element.querySelector('#progress');\r\n\tconst timer = element.querySelector('#timer');\r\n\tconst duration = element.querySelector('#duration');\r\n\tconst prev = element.querySelector('#prev');\r\n\tconst play = element.querySelector('#play');\r\n\tconst next = element.querySelector('#next');\r\n\tlet songIndex = 0;\r\n\r\n\t// Load the given song\r\n\tconst loadSong = (song) => {\r\n\t\tcover.src = song.cover?.url || defaultCoverImg;\r\n\t\tdisc.src = song.audio?.url;\r\n\t\ttitle.textContent = song.title;\r\n\t\tartist.textContent = song.artist;\r\n\t\t// duration.textContent = song.duration;\r\n\t\tdisc.addEventListener('loadedmetadata', function () {\r\n\t\t\tduration.innerHTML = toHHMMSS(disc.duration);\r\n\t\t});\r\n\t};\r\n\tloadSong(songs[songIndex]);\r\n\r\n\t// Toggle play and pause\r\n\tfunction playPauseMedia() {\r\n\t\tif (disc.paused) {\r\n\t\t\tconst allAudioEls = document.querySelectorAll('audio');\r\n\t\t\tallAudioEls.forEach(audioEl => audioEl?.pause());\r\n\r\n\t\t\tdisc.play();\r\n\t\t} else {\r\n\t\t\tdisc.pause();\r\n\t\t}\r\n\t}\r\n\r\n\t// Convert time\r\n\tfunction toHHMMSS(time) {\r\n\t\tvar sec_num = parseInt(time, 10); // don't forget the second param\r\n\t\tvar hours = Math.floor(sec_num / 3600);\r\n\t\tvar minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n\t\tvar seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n\t\tif (hours < 10) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0' + seconds;\r\n\t\t}\r\n\r\n\t\treturn `${parseInt(hours) > 0 ? `${hours}:` : ''}${minutes}:${seconds}`;\r\n\t}\r\n\r\n\t// Update icon\r\n\tfunction updatePlayPauseIcon() {\r\n\t\tif (disc.paused) {\r\n\t\t\tplay.classList.remove('pauseBtn');\r\n\t\t\tplay.classList.add('playBtn');\r\n\t\t} else {\r\n\t\t\tplay.classList.remove('playBtn');\r\n\t\t\tplay.classList.add('pauseBtn');\r\n\t\t}\r\n\t}\r\n\r\n\t// Update progress bar\r\n\tfunction updateProgress() {\r\n\t\tprogress.style.width = (disc.currentTime / disc.duration) * 100 + '%';\r\n\r\n\t\tvar hours = Math.floor(disc.currentTime / 3600);\r\n\t\tvar minutes = Math.floor((disc.currentTime - hours * 3600) / 60);\r\n\t\tvar seconds = Math.floor(disc.currentTime - hours * 3600 - minutes * 60);\r\n\t\t// let minutes = Math.floor(disc.currentTime / 60);\r\n\t\t// let seconds = Math.floor(disc.currentTime % 60);\r\n\t\tif (hours < 10) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0' + seconds;\r\n\t\t}\r\n\t\ttimer.textContent = `${parseInt(hours) > 0 ? `${hours}:` : ''}${minutes}:${seconds}`;\r\n\t}\r\n\r\n\t// Reset the progress\r\n\tfunction resetProgress() {\r\n\t\tprogress.style.width = 0 + '%';\r\n\t\ttimer.textContent = '0:00';\r\n\t}\r\n\r\n\t// Go to previous song\r\n\tfunction gotoPreviousSong() {\r\n\t\tif (songIndex === 0) {\r\n\t\t\tsongIndex = songs.length - 1;\r\n\t\t} else {\r\n\t\t\tsongIndex = songIndex - 1;\r\n\t\t}\r\n\r\n\t\tconst isDiscPlayingNow = !disc.paused;\r\n\t\tloadSong(songs[songIndex]);\r\n\t\tresetProgress();\r\n\t\tif (isDiscPlayingNow) {\r\n\t\t\tplayPauseMedia();\r\n\t\t}\r\n\t}\r\n\r\n\t// Go to next song\r\n\tfunction gotoNextSong(playImmediately) {\r\n\t\tconst goToNext = () => {\r\n\t\t\tif (songIndex === songs.length - 1) {\r\n\t\t\t\tsongIndex = 0;\r\n\t\t\t} else {\r\n\t\t\t\tsongIndex = songIndex + 1;\r\n\t\t\t}\r\n\r\n\t\t\tconst isDiscPlayingNow = !disc.paused;\r\n\t\t\tloadSong(songs[songIndex]);\r\n\t\t\tresetProgress();\r\n\t\t\tif (isDiscPlayingNow || playImmediately) {\r\n\t\t\t\tplayPauseMedia();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (songIndex < songs.length - 1) {\r\n\t\t\tgoToNext()\r\n\t\t} // Stop at end of album\r\n\t}\r\n\r\n\t// Change song progress when clicked on progress bar\r\n\tfunction setProgress(ev) {\r\n\t\tconst totalWidth = this.clientWidth;\r\n\t\tconst clickWidth = ev.offsetX;\r\n\t\tconst clickWidthRatio = clickWidth / totalWidth;\r\n\t\tdisc.currentTime = clickWidthRatio * disc.duration;\r\n\t}\r\n\r\n\t// Play/Pause when play button clicked\r\n\tplay.addEventListener('click', playPauseMedia);\r\n\r\n\t// Various events on disc\r\n\tdisc.addEventListener('play', updatePlayPauseIcon);\r\n\tdisc.addEventListener('pause', updatePlayPauseIcon);\r\n\tdisc.addEventListener('timeupdate', updateProgress);\r\n\tdisc.addEventListener('ended', gotoNextSong.bind(null, true));\r\n\r\n\t// Go to next song when next button clicked\r\n\tprev.addEventListener('click', gotoPreviousSong);\r\n\r\n\t// Go to previous song when previous button clicked\r\n\tnext.addEventListener('click', gotoNextSong.bind(null, false));\r\n\r\n\t// Move to different place in the song\r\n\tprogressContainer.addEventListener('click', setProgress);\r\n};\r\nexport default MP3Player;","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.scss';\r\nimport MP3Player from './Components/Common/MP3Player';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst mp3PlayerEls = document.querySelectorAll('.wp-block-bpmp-mp3-player');\r\n\tmp3PlayerEls.forEach(mp3PlayerEl => {\r\n\t\tconst attributes = JSON.parse(mp3PlayerEl.dataset.attributes);\r\n\t\tconst { audioProperties } = attributes;\r\n\r\n\t\tMP3Player(mp3PlayerEl, audioProperties);\r\n\r\n\t\tmp3PlayerEl?.removeAttribute('data-attributes');\r\n\t});\r\n});"],"names":["defaultCoverImg","MP3Player","selector","songs","element","document","querySelector","cover","disc","title","artist","progressContainer","progress","timer","duration","prev","play","next","songIndex","loadSong","song","src","url","audio","textContent","addEventListener","innerHTML","toHHMMSS","playPauseMedia","paused","allAudioEls","querySelectorAll","forEach","audioEl","pause","time","sec_num","parseInt","hours","Math","floor","minutes","seconds","updatePlayPauseIcon","classList","remove","add","updateProgress","style","width","currentTime","resetProgress","gotoPreviousSong","length","isDiscPlayingNow","gotoNextSong","playImmediately","goToNext","setProgress","ev","totalWidth","clientWidth","clickWidth","offsetX","clickWidthRatio","bind","mp3PlayerEls","mp3PlayerEl","attributes","JSON","parse","dataset","audioProperties","removeAttribute"],"sourceRoot":""}